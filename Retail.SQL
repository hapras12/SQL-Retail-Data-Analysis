--DATA PREPARATION AND UNDERSTANDING


--Q1--BEGIN 
	

select count(*) as Cust from Customer  
select count(*) as Proad_cat from prod_cat_info
select count(*) as Trans from Transactions



--Q1--END

--Q2--BEGIN
	
	
SELECT COUNT(TOTAL_AMT) NO_OF_TRANSACTIONS FROM TRANSACTIONS
WHERE TOTAL_AMT LIKE '-%'



--Q2--END

--Q3--BEGIN      
	
SELECT CONVERT(DATE, DOB, 105) AS DATES FROM CUSTOMER 
SELECT CONVERT(DATE, TRAN_DATE, 105) as Trans_Date FROM TRANSACTIONS


--Q3--END

--Q4--BEGIN

SELECT DATEDIFF(DAY, MIN(CONVERT(DATE, TRAN_DATE, 105)), MAX(CONVERT(DATE, TRAN_DATE, 105))) as [Day], 
DATEDIFF(MONTH, MIN(CONVERT(DATE, TRAN_DATE, 105)), MAX(CONVERT(DATE, TRAN_DATE, 105))) as [Month],  
DATEDIFF(YEAR, MIN(CONVERT(DATE, TRAN_DATE, 105)), MAX(CONVERT(DATE, TRAN_DATE, 105))) as [Year]
FROM TRANSACTIONS



--Q4--END

--Q5--BEGIN

SELECT PROD_CAT FROM PROD_CAT_INFO
WHERE PROD_SUBCAT ='DIY'


--Q5--END


--DATA ANALYSIS

--Q1--BEGIN

SELECT TOP 1 STORE_TYPE, COUNT(TRANSACTION_ID) [Count] FROM TRANSACTIONS
GROUP BY STORE_TYPE
ORDER BY COUNT(TRANSACTION_ID) DESC




--Q1--END
	
--Q2--BEGIN  
	
	
	
SELECT GENDER, COUNT(CUSTOMER_ID) AS COUNTG
FROM CUSTOMER
WHERE GENDER IN ('M' , 'F')
GROUP BY GENDER




--Q2--END	
--Q3--BEGIN

SELECT top 1
CITY_CODE, COUNT(CUSTOMER_ID) CUST_COUNT FROM CUSTOMER
GROUP BY CITY_CODE
ORDER BY CUST_COUNT DESC




--Q3--END
--Q4--BEGIN
	


SELECT COUNT(PROD_SUBCAT) AS SUBCAT_COUNT FROM PROD_CAT_INFO
WHERE PROD_CAT = 'BOOKS'
GROUP BY PROD_CAT




--Q4--END

--Q5--BEGIN
	
SELECT TOP 1 TRANSACTIONS.PROD_CAT_CODE, PROD_CAT  ,COUNT(TRANSACTIONS.PROD_CAT_CODE) QUANTITY FROM TRANSACTIONS
LEFT JOIN PROD_CAT_INFO ON TRANSACTIONS.PROD_CAT_CODE= PROD_CAT_INFO.PROD_CAT_CODE
GROUP BY TRANSACTIONS.PROD_CAT_CODE, PROD_CAT
ORDER BY 3 DESC 


--Q5--END


--Q6--BEGIN

SELECT SUM(TOTAL_AMT) AMOUNT
FROM TRANSACTIONS
INNER JOIN PROD_CAT_INFO ON TRANSACTIONS.PROD_CAT_CODE = PROD_CAT_INFO.PROD_CAT_CODE 
AND PROD_SUBCAT_CODE = PROD_SUB_CAT_CODE
WHERE PROD_CAT IN ('BOOKS' , 'ELECTRONICS')


--Q6--END


--Q7--BEGIN

SELECT COUNT(CUSTOMER_ID) AS CUSTOMER_COUNT
FROM CUSTOMER WHERE CUSTOMER_ID IN 
(
SELECT CUST_ID
FROM TRANSACTIONS
LEFT JOIN CUSTOMER ON CUSTOMER_ID = CUST_ID
WHERE TOTAL_AMT NOT LIKE '-%'
GROUP BY
CUST_ID
HAVING 
COUNT(TRANSACTION_ID) > 10
)

--Q7--END

--Q8--BEGIN

SELECT SUM(TOTAL_AMT) AS COMBINED_REVENUE FROM TRANSACTIONS
INNER JOIN PROD_CAT_INFO ON TRANSACTIONS.PROD_CAT_CODE = PROD_CAT_INFO.PROD_CAT_CODE 
	  AND PROD_SUBCAT_CODE = PROD_SUBCAT_CODE
WHERE PROD_CAT IN ('CLOTHING','ELECTRONICS') AND STORE_TYPE = 'FLAGSHIP STORE'


--Q8--END

--Q9--BEGIN

SELECT PROD_SUBCAT, SUM(TOTAL_AMT) REVENUE
FROM TRANSACTIONS
LEFT JOIN CUSTOMER ON TRANSACTIONS.CUST_ID=CUSTOMER.CUSTOMER_ID
LEFT JOIN PROD_CAT_INFO ON PROD_CAT_INFO.PROD_SUB_CAT_CODE = TRANSACTIONS.PROD_SUBCAT_CODE AND TRANSACTIONS.PROD_CAT_CODE = PROD_CAT_INFO.PROD_CAT_CODE
WHERE PROD_CAT_INFO.PROD_CAT_CODE= '3' AND GENDER = 'M'
GROUP BY PROD_SUBCAT_CODE, PROD_SUBCAT


--Q9--END

--Q10--BEGIN

SELECT TOP 5 
PROD_SUBCAT, (SUM(TOTAL_AMT)/(SELECT SUM(TOTAL_AMT) FROM TRANSACTIONS))*100 AS PERCANTAGE_OF_SALES, 
(COUNT(CASE WHEN QTY< 0 THEN QTY ELSE NULL END)/SUM(QTY))*100 AS PERCENTAGE_OF_RETURN
FROM TRANSACTIONS
INNER JOIN PROD_CAT_INFO ON TRANSACTIONS.PROD_CAT_CODE = PROD_CAT_INFO.PROD_CAT_CODE AND TRANSACTIONS.PROD_SUBCAT_CODE= PROD_CAT_INFO.PROD_SUB_CAT_CODE
GROUP BY PROD_SUBCAT
ORDER BY SUM(TOTAL_AMT) DESC

--Q10--END

--Q11--BEGIN

SELECT CUST_ID,SUM(TOTAL_AMT) AS REVENUE FROM TRANSACTIONS
WHERE CUST_ID IN 
(SELECT CUSTOMER_ID
FROM CUSTOMER
WHERE DATEDIFF(YEAR,CONVERT(DATE,DOB,103),GETDATE()) BETWEEN 25 AND 35)
AND CONVERT(DATE,TRAN_DATE,103) BETWEEN DATEADD(DAY,-30,(SELECT MAX(CONVERT(DATE,TRAN_DATE,103)) FROM TRANSACTIONS)) 
AND (SELECT MAX(CONVERT(DATE,TRAN_DATE,103)) FROM TRANSACTIONS)
GROUP BY CUST_ID

--Q11--END


--Q12--BEGIN


SELECT TOP 1 PROD_CAT, SUM(TOTAL_AMT) FROM TRANSACTIONS
INNER JOIN PROD_CAT_INFO ON TRANSACTIONS.PROD_CAT_CODE = PROD_CAT_INFO.PROD_CAT_CODE 
AND TRANSACTIONS.PROD_SUBCAT_CODE = PROD_CAT_INFO.PROD_SUB_CAT_CODE
WHERE TOTAL_AMT < 0 AND 
CONVERT(date, TRAN_DATE, 103) BETWEEN DATEADD(MONTH,-3,(SELECT MAX(CONVERT(DATE,TRAN_DATE,103)) FROM TRANSACTIONS)) 
AND (SELECT MAX(CONVERT(DATE,TRAN_DATE,103)) FROM TRANSACTIONS)
GROUP BY PROD_CAT
ORDER BY 2 DESC



--Q12--END

--Q13--BEGIN

SELECT  STORE_TYPE, SUM(TOTAL_AMT) TOT_SALES, SUM(QTY) TOTAL_QUANTIYY
FROM TRANSACTIONS
GROUP BY STORE_TYPE
HAVING SUM(TOTAL_AMT) >=ALL (SELECT SUM(TOTAL_AMT) FROM TRANSACTIONS 
GROUP BY STORE_TYPE)
AND SUM(QTY) >=ALL (SELECT SUM(QTY) FROM TRANSACTIONS GROUP BY STORE_TYPE)

--Q13--END



--Q14--BEGIN

SELECT PROD_CAT, PROD_SUBCAT, AVG(TOTAL_AMT) AS AVERAGE_REVENUE, SUM(TOTAL_AMT) AS REVENUE
FROM TRANSACTIONS
INNER JOIN PROD_CAT_INFO ON TRANSACTIONS.PROD_CAT_CODE=PROD_CAT_INFO.PROD_CAT_CODE AND PROD_CAT_INFO.PROD_SUB_CAT_CODE=TRANSACTIONS.PROD_SUBCAT_CODE
WHERE PROD_CAT IN
(
SELECT TOP 5 
PROD_CAT
FROM TRANSACTIONS 
INNER JOIN PROD_CAT_INFO ON TRANSACTIONS.PROD_CAT_CODE= PROD_CAT_INFO.PROD_CAT_CODE AND PROD_CAT_INFO.PROD_SUB_CAT_CODE = TRANSACTIONS.PROD_SUBCAT_CODE
GROUP BY PROD_CAT
ORDER BY SUM(QTY) DESC
)
GROUP BY PROD_CAT, PROD_SUBCAT 

--Q14--END
